name: Deploy Next.js site to Pages

on:
  push:
    branches: ['main']
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  copy-api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Copy API content
        run: |
          mkdir -p ../bfinnoapi
          rsync -av --exclude='node_modules' ./api/ ../bfinnoapi/

      - name: Push to bfinnoapi repository
        run: |
          cd ../bfinnoapi
          git init
          git config --global user.email "aleksi.nokelainen@gmail.com"
          git config --global user.name "Krugou"
          git remote add origin https://${{ secrets.GITHUB_TOKEN }}@github.com/Krugou/bfinnoapi.git
          git add .
          git commit -m "Update API content"
          git branch -M main
          git push -f origin main

  build:
    needs: copy-api
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_FIREBASE_API_KEY: 'AIzaSyB8avm6PggaengrcPIVYg4UZFOVwylXhrc'
      NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: 'bfinnoproject.firebaseapp.com'
      NEXT_PUBLIC_FIREBASE_PROJECT_ID: 'bfinnoproject'
      NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: 'bfinnoproject.appspot.com'
      NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: '462129898176'
      NEXT_PUBLIC_FIREBASE_APP_ID: '1:462129898176:web:b4530441744c65d931c325'
      NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: 'G-3L84G59MVG'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: next

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      - name: Install dependencies
        run: npm i

      - name: Build with Next.js
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
